[{"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\reportWebVitals.js":"1","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\App.js":"2","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\index.js":"3","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\FCBody.js":"4","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\items\\FCTag.js":"5","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\index.js":"6","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\hooks\\useDraggable.js":"7","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\contextMenu\\ContextMenu.js":"8","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\LeftMenu.js":"9","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\unions\\ALUnion.js":"10"},{"size":362,"mtime":1608342457057,"results":"11","hashOfConfig":"12"},{"size":133,"mtime":1608343437963,"results":"13","hashOfConfig":"12"},{"size":390,"mtime":1608409131929,"results":"14","hashOfConfig":"12"},{"size":1823,"mtime":1612293755552,"results":"15","hashOfConfig":"12"},{"size":4100,"mtime":1612293589587,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1608342457057,"results":"17","hashOfConfig":"12"},{"size":1051,"mtime":1608387925686,"results":"18","hashOfConfig":"12"},{"size":377,"mtime":1608389371789,"results":"19","hashOfConfig":"12"},{"size":280,"mtime":1608391208583,"results":"20","hashOfConfig":"12"},{"size":227,"mtime":1612292273242,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"stdehn",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\reportWebVitals.js",[],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\App.js",[],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\index.js",[],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\FCBody.js",["46","47","48","49","50","51","52"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nimport FCTag from \"../items/FCTag\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport ALUnion from \"../unions/ALUnion\";\r\n\r\nconst FCBodyS = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n  background-color: #fafafa;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst TBBody = styled.div`\r\n  height: 40px;\r\n  background-color: #fff;\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  margin-right: 8px;\r\n  background-color: #ededed;\r\n  height: 80%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  padding: 0 8px;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  height: 70%;\r\n  width: 500px;\r\n  margin-left: 52px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst FCBody = () => {\r\n  const ref = React.createRef();\r\n\r\n  const [renderTags, setrenderTags] = useState([\r\n    {\r\n      id: 0,\r\n      tagName: \"Inicio\",\r\n      connectedTo: [],\r\n    },\r\n    {\r\n      id: 1,\r\n      tagName: \"Fin\",\r\n      connectedTo: [],\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {/* <TBBody>\r\n        <Span>+ Add</Span>\r\n        <Pdf targetRef={ref} filename=\"flowchart.pdf\">\r\n          {({ toPdf }) => <Span onClick={toPdf}>Generate Pdf</Span>}\r\n        </Pdf>\r\n        <TitleInput placeholder={\"Ingrese el tÃ­tulo del diagrama de flujo\"} />\r\n      </TBBody> */}\r\n      <FCBodyS>\r\n        {/* <LeftMenu></LeftMenu> */}\r\n        <Content ref={ref}>\r\n          {renderTags.map((item) => (\r\n            <FCTag key={item.id} tagName={item.tagName} />\r\n          ))}\r\n        </Content>\r\n      </FCBodyS>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FCBody;\r\n","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\items\\FCTag.js",["53","54","55"],"import React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useDraggable from \"../../hooks/useDraggable\";\r\n\r\nconst SelectingPoint = styled.div`\r\n  cursor: pointer;\r\n  display: ${(props) => (props.selected ? \"block\" : \"none\")};\r\n  height: 4px;\r\n  width: 4px;\r\n  background: #1365e0;\r\n  border-radius: 16px;\r\n  position: absolute;\r\n  top: ${(props) => props.top};\r\n  left: ${(props) => props.left};\r\n  bottom: ${(props) => props.bottom};\r\n  right: ${(props) => props.right};\r\n`;\r\n\r\nconst FCTagS = styled.div`\r\n  position: absolute;\r\n  cursor: move;\r\n  top: \"52px\";\r\n  left: \"16px\";\r\n  width: 184px;\r\n  height: 42px;\r\n  background: #454449;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  border: 4px solid transparent;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FCTag = ({ tagName }) => {\r\nconst [positionBottomSP, setPositionBottomSP] = useState('')\r\n\r\n\r\n\r\n  const [selected, setselected] = useState(false);\r\n  const [toConnect, settoConnect] = useState({\r\n    inAction: false,\r\n    idStart: \"\",\r\n    start: false,\r\n    coorStart: {\r\n      X: 0,\r\n      Y: 0,\r\n    },\r\n    moving: false,\r\n    coorMoving: {\r\n      X: 0,\r\n      Y: 0,\r\n    },\r\n    end: false,\r\n    coorEnd: {\r\n      X: 0,\r\n      Y: 0,\r\n    },\r\n    idEnd: \"\",\r\n    conectedWith: {},\r\n  });\r\n  const tagRef = useRef(null);\r\n  useDraggable(tagRef);\r\n\r\n  const onTagClickHandler = () => {\r\n    setselected(true);\r\n    // The following code identifies the selected points positions\r\n    //1. Gets the DOM element\r\n    let topSP = document.getElementById(\"topSP\");\r\n    let rightSP = document.getElementById(\"rightSP\");\r\n    let leftSP = document.getElementById(\"leftSP\");\r\n    let bottomSP = document.getElementById(\"bottomSP\");\r\n\r\n    //1. Gets the DOM element's position\r\n    let positionTopSP = topSP.getBoundingClientRect();\r\n    let positionRightSP = rightSP.getBoundingClientRect();\r\n    let positionLeftSP = leftSP.getBoundingClientRect();\r\n    // let positionBottomSP = bottomSP.getBoundingClientRect();\r\n\r\n    setPositionBottomSP(bottomSP.getBoundingClientRect())\r\n\r\n    // console.log(\"THE ELEMENT POSITION IS-->\");\r\n    // console.log(\"TOP-->\", positionTopSP);\r\n    // console.log(\"RIGHT-->\", positionRightSP);\r\n    // console.log(\"LEFT-->\", positionLeftSP);\r\n    console.log(\"BOTTOM-->\", positionBottomSP);\r\n  };\r\n\r\n  const onTopClick = () => {\r\n    if (!toConnect.inAction) {\r\n      startOut();\r\n    }\r\n  };\r\n\r\n  const startOut = () => {\r\n    // The following code identifies the selected points positions\r\n    //1. Gets the DOM element\r\n    let topSP = document.getElementById(\"topSP\");\r\n\r\n    //1. Gets the DOM element's position\r\n    let positionTopSP = topSP.getBoundingClientRect();\r\n\r\n    settoConnect({\r\n      inAction: !toConnect.inAction,\r\n      idStart: topSP.id,\r\n      start: true,\r\n      coorStart: {\r\n        X: positionTopSP.x,\r\n        Y: positionTopSP.y,\r\n      },\r\n      moving: true,\r\n      coorMoving: {\r\n        X: 0,\r\n        Y: 0,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onRightClick = () => {};\r\n  const onLeftClick = () => {};\r\n  const onBottomClick = () => {};\r\n\r\n  return (\r\n    <>\r\n      <FCTagS ref={tagRef} onClick={onTagClickHandler}>\r\n        <SelectingPoint\r\n          top={\"-5px\"}\r\n          selected={selected}\r\n          onClick={onTopClick}\r\n          id={\"topSP\"}\r\n        />\r\n        <SelectingPoint\r\n          right={\"-5px\"}\r\n          selected={selected}\r\n          onClick={onRightClick}\r\n          id={\"rightSP\"}\r\n        />\r\n        <SelectingPoint\r\n          left={\"-5px\"}\r\n          selected={selected}\r\n          onClick={onLeftClick}\r\n          id={\"leftSP\"}\r\n        />\r\n        <SelectingPoint\r\n          bottom={\"-5px\"}\r\n          selected={selected}\r\n          onClick={onBottomClick}\r\n          id={\"bottomSP\"}\r\n        />\r\n        {tagName}\r\n      </FCTagS>\r\n      <svg width=\"100%\" height=\"100%\" stroke=\"blue\" strokeWidth=\"1\">\r\n\r\n        <line x1={positionBottomSP.x} y1={positionBottomSP.y} x2=\"300\" y2=\"300\"></line>\r\n\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FCTag;\r\n","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\index.js",[],["56","57"],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\hooks\\useDraggable.js",["58","59","60"],"import { useState, useEffect } from \"react\";\r\n\r\nexport default function useDraggable(el) {\r\n  const [{ dx, dy }, setOffset] = useState({ dx: 0, dy: 0 });\r\n\r\n  useEffect(() => {\r\n    const handleMouseDown = (event) => {\r\n      const startX = event.pageX - dx;\r\n      const startY = event.pageY - dy;\r\n\r\n      const handleMouseMove = (event) => {\r\n        const newDx = event.pageX - startX;\r\n        const newDy = event.pageY - startY;\r\n        setOffset({ dx: newDx, dy: newDy });\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n      document.addEventListener(\r\n        \"mouseup\",\r\n        () => {\r\n          document.removeEventListener(\"mousemove\", handleMouseMove);\r\n        },\r\n        { once: true }\r\n      );\r\n    };\r\n\r\n    el.current.addEventListener(\"mousedown\", handleMouseDown);\r\n\r\n    return () => {\r\n      el.current.removeEventListener(\"mousedown\", handleMouseDown);\r\n    };\r\n  }, [dx, dy]);\r\n\r\n  useEffect(() => {\r\n    el.current.style.transform = `translate3d(${dx}px, ${dy}px, 0)`;\r\n  }, [dx, dy]);\r\n}\r\n","C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\contextMenu\\ContextMenu.js",[],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\flowchart\\LeftMenu.js",[],"C:\\Users\\dbaiardi\\Desktop\\React\\flowchart\\src\\components\\unions\\ALUnion.js",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":15},{"ruleId":"61","severity":1,"message":"67","line":22,"column":7,"nodeType":"63","messageId":"64","endLine":22,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":33,"column":7,"nodeType":"63","messageId":"64","endLine":33,"endColumn":11},{"ruleId":"61","severity":1,"message":"69","line":44,"column":7,"nodeType":"63","messageId":"64","endLine":44,"endColumn":17},{"ruleId":"61","severity":1,"message":"70","line":54,"column":22,"nodeType":"63","messageId":"64","endLine":54,"endColumn":35},{"ruleId":"61","severity":1,"message":"71","line":76,"column":9,"nodeType":"63","messageId":"64","endLine":76,"endColumn":22},{"ruleId":"61","severity":1,"message":"72","line":77,"column":9,"nodeType":"63","messageId":"64","endLine":77,"endColumn":24},{"ruleId":"61","severity":1,"message":"73","line":78,"column":9,"nodeType":"63","messageId":"64","endLine":78,"endColumn":23},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":31,"column":10,"nodeType":"63","endLine":31,"endColumn":17},{"ruleId":"78","severity":1,"message":"80","line":33,"column":6,"nodeType":"81","endLine":33,"endColumn":14,"suggestions":"82"},{"ruleId":"78","severity":1,"message":"80","line":37,"column":6,"nodeType":"81","endLine":37,"endColumn":14,"suggestions":"83"},"no-unused-vars","'Pdf' is defined but never used.","Identifier","unusedVar","'LeftMenu' is defined but never used.","'ALUnion' is defined but never used.","'TBBody' is assigned a value but never used.","'Span' is assigned a value but never used.","'TitleInput' is assigned a value but never used.","'setrenderTags' is assigned a value but never used.","'positionTopSP' is assigned a value but never used.","'positionRightSP' is assigned a value but never used.","'positionLeftSP' is assigned a value but never used.","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","The ref value 'el.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'el.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'el'. Either include it or remove the dependency array.","ArrayExpression",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [dx, dy, el]",{"range":"91","text":"92"},{"range":"93","text":"92"},[926,934],"[dx, dy, el]",[1036,1044]]